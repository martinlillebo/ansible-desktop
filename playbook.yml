- name: Debian desktop config
  hosts: vm
  gather_facts: yes
  become: no
  vars:
    github_username: "martinlillebo"
#  vars_prompt:
#    - name: github_username
#      prompt: GitHub-brukernavn
#      private: false
#    - name: github_access_token
#      prompt: Lim inn GitHub access token (ctrl + shift + V)
#      private: true

  tasks:

  - name: Inkluderer variabler
    ansible.builtin.include_vars: secret-vars.yml

  - name: Legger inn AutoKey-config
    import_role:
      name: autokey-config

  - name: apt update og apt upgrade
    become: yes
    ansible.builtin.apt:
      update_cache: yes
      cache_valid_time: 3600 # hopper over update_cache om den er under en time gammel
      upgrade: yes

#  Fjerner midlertidig for å spare tid
#  - name: Legger inn sublimeless .desktop til ./local/share/applications
#    import_role:
#      name: sublimeless-desktop

  - name: Installerer masse programmer
    become: yes
    ansible.builtin.apt:
      state: present
      name:
#        - virt-manager          # Til KVM
#        - qemu-system           # Til KVM
#        - libvirt-daemon-system # Til KVM
        - flatpak
        - git
        - curl
#        - htop
        - python3-pip
        - python3-venv
#        - less
#        - lshw
#        - nano
#        - tmux
#        - tree
#        - usbutils
#        - ufw
#        - yamllint
#        - net-tools
#        - ncat
#        - ethtool
#        - host
#        - ncdu
#        - screenkey
        - autokey-gtk # Autokey til GNOME
        - zsh
        - python3-psutil # Avhengighet til community.general.dconf. Burde ligge i venv
#       - vlc

  - name: Importerer GNOME-hurtigtaster
    import_role:
      name: gnome-hurtigtaster

  - name: Setter GNOME-klokka til å vise sekunder
    command: gsettings set org.gnome.desktop.interface clock-show-seconds true
    changed_when: false  # Ensure the task does not always report as changed

  - name: GNOME - Enabler touchpad tap-to-click
    community.general.dconf:
      key: /org/gnome/desktop/peripherals/touchpad/tap-to-click
      value: 'true'

  - name: Skrur av event sounds
    community.general.dconf:
      key: /org/gnome/desktop/sound/event-sounds
      value: 'false'

  - name: Skrur på visning av skjulte filer i GUI
    dconf:
      key: /org/gtk/gtk4/settings/file-chooser/show-hidden
      value: 'true'

  - name: Git-config
    community.general.git_config:
      name: pull.rebase
      scope: global
      value: 'false'

  - name: Oppretter "~/repos/notater/" 
    ansible.builtin.file:
      path: "~/repos/notater"
      state: directory

  - name: Sjekker om notatblokka fins
    stat:
      path: "{{ ansible_env.HOME }}/repos/notater/.git/"
    register: notater_fins

  - name: Kopierer inn notatblokka
    ansible.builtin.git:
      repo: "https://{{ github_username }}:{{ github_access_token }}@github.com/martinlillebo/notater.git"
      dest: "{{ ansible_env.HOME }}/repos/notater"
      version: master
    when: not notater_fins.stat.exists

  - name: Sjekker om ~/.ssh fins
    stat:
      path: "{{ ansible_env.HOME }}/.ssh/"
    register: ssh_fins
  
#  - name: Oppretter privat SSH-nøkkel


  - name: Setter Zsh som standard skall
    become: true
    ansible.builtin.user:
      name: "{{ ansible_facts['env']['USER'] }}"
      shell: /bin/zsh

  - name: Sjekker om Oh My Zsh er installert ennå
    stat:
      path: "{{ ansible_env.HOME }}/.oh-my-zsh"
    register: ohmyzsh_installed

  - name: Laster ned OMZ installasjonsskript
    get_url:
      url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
      dest: /tmp/install_ohmyzsh.sh
    when: not ohmyzsh_installed.stat.exists

  - name: Installerer OMZ
    command: sh /tmp/install_ohmyzsh.sh --unattended
    register: ohmyzsh_result
    failed_when: "'FAILED' in ohmyzsh_result.stderr"
    when: not ohmyzsh_installed.stat.exists

  - name: Henter Git-repoet som gir syntaksmarkering i Zsh
    ansible.builtin.git:
      repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
      dest: ~/zsh-syntax-highlighting
      update: yes

  - name: Oppretter "~/repos/dotfiler/" 
    ansible.builtin.file:
      path: "~/repos/notater"
      state: directory

  - name: Kopierer inn dotfilene
    ansible.builtin.git:
      repo: "https://github.com/martinlillebo/dotfiler.git"
      dest: "{{ ansible_env.HOME }}/repos/dotfiler"
      version: master

  - name: Sjekker om ~/.zshrc er en symlenke
    ansible.builtin.stat:
      path: ~/.zshrc
    register: zshrc_stat    

  - name: Sletter original .zshrc
    ansible.builtin.file:
      path: ~/.zshrc
      state: absent
    when: not zshrc_stat.stat.islnk

  - name: symlenker .zshrc
    ansible.builtin.file:
      src: ~/repos/dotfiler/.zshrc
      dest: ~/.zshrc
      state: link
    when: not zshrc_stat.stat.islnk

  - name: symlenker .vimrc
    ansible.builtin.file:
      src: ~/repos/dotfiler/.vimrc
      dest: ~/.vimrc
      state: link

  - name: symlenker .nanorc
    ansible.builtin.file:
      src: ~/repos/dotfiler/.nanorc
      dest: ~/.nanorc
      state: link

  - name: Setter rett tidssone
    community.general.timezone:
      name: Europe/Oslo



#  - name: Sjekker om Discord er installert
#    stat:
#      path: /usr/bin/discord
#    register: discord_installed
#
#  - name: Laster ned Discord (.deb) til /tmp
#    get_url:
#      url: https://discord.com/api/download?platform=linux&format=deb
#      dest: /tmp/discord.deb
#    tags: download
#    when: not discord_installed.stat.exists
#
#  - name: Installerer Discord fra .deb-fila
#    become: yes
#    apt:
#      deb: /tmp/discord.deb
#    tags: install
#    when: not discord_installed.stat.exists
#
#  - name: Sjekker om VSCode er installert
#    stat:
#      path: /usr/bin/code
#    register: vscode_installed
#
#  - name: Laster ned VS Code (.deb) til /tmp
#    get_url:
#      url: https://go.microsoft.com/fwlink/?LinkID=760868
#      dest: /tmp/vscode.deb
#    tags: download
#    when: not vscode_installed.stat.exists
#
#  - name: Installerer VS Code fra .deb-fila
#    become: yes
#    apt:
#      deb: /tmp/vscode.deb
#    tags: install
#    when: not vscode_installed.stat.exists
#  
#  - name: Sjekker om Steam er installert
#    stat:
#      path: /usr/bin/steam
#    register: steam_installed
#
#  - name: Laster ned Steam (.deb) til /tmp
#    get_url:
#      url: https://cdn.akamai.steamstatic.com/client/installer/steam.deb
#      dest: /tmp/steam.deb
#    tags: download
#    when: not steam_installed.stat.exists
#
#  - name: Installerer Steam fra .deb-fila
#    become: yes
#    apt:
#      deb: /tmp/steam.deb
#    tags: install
#    when: not steam_installed.stat.exists

## Forebygger feilmeldingen "fatal: Need to specify how to reconcile divergent branches" 
## som Git spør om hvis jeg trekker ned et repo med "divergent branches"

## Droppet

#  - name: enabler autologin
#    become: yes
#    lineinfile:
#      path: /etc/gdm3/daemon.conf
#      regexp: '^#\s*AutomaticLoginEnable\s*=\s*true'
#      line: 'AutomaticLoginEnable = true'
#      backrefs: yes

#  - name: angir autologin-brukernavn
#    become: yes
#    lineinfile:
#      path: /etc/gdm3/daemon.conf
#      regexp: '^#\s*AutomaticLogin\s*='
#      line: "AutomaticLogin = {{ ansible_facts['env']['USER'] }}"
#      backrefs: yes

#  - name: Alle facts
#    ansible.builtin.debug:
#      var: ansible_facts

#  - name: printtest
#    ansible.builtin.debug:
#      msg: "Current user: {{ ansible_facts['env']['USER'] }}"

# Gir opp flathub midlertidig

#  - name: Add the flathub flatpak repository remote to the user installation
#    community.general.flatpak_remote:
#      name: flathub
#      state: present
#      flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
#      method: user

#  - name: INstallerer GIMP fra Flathub
#    community.general.flatpak:
#      name: org.gimp.GIMP
#      state: present    
#      method: user
